/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 13.5 		*/
/*  Created On : 27-ene.-2023 1:35:38 p. m. 				*/
/*  DBMS       : MySql 						*/
/* ---------------------------------------------------- */

SET FOREIGN_KEY_CHECKS=0 
;

/* Drop Tables */

DROP TABLE IF EXISTS `absence` CASCADE
;

DROP TABLE IF EXISTS `agent` CASCADE
;

DROP TABLE IF EXISTS `agent_module` CASCADE
;

DROP TABLE IF EXISTS `agent_session` CASCADE
;

DROP TABLE IF EXISTS `answer_type` CASCADE
;

DROP TABLE IF EXISTS `campus` CASCADE
;

DROP TABLE IF EXISTS `classroom_course` CASCADE
;

DROP TABLE IF EXISTS `classroom_course_attachments` CASCADE
;

DROP TABLE IF EXISTS `classroom_course_group` CASCADE
;

DROP TABLE IF EXISTS `classroom_course_group_student` CASCADE
;

DROP TABLE IF EXISTS `classroom_course_student` CASCADE
;

DROP TABLE IF EXISTS `config` CASCADE
;

DROP TABLE IF EXISTS `curso_group_student_absence` CASCADE
;

DROP TABLE IF EXISTS `event_type` CASCADE
;

DROP TABLE IF EXISTS `group_students_note` CASCADE
;

DROP TABLE IF EXISTS `logs` CASCADE
;

DROP TABLE IF EXISTS `modules` CASCADE
;

DROP TABLE IF EXISTS `notification` CASCADE
;

DROP TABLE IF EXISTS `notification_reseiver` CASCADE
;

DROP TABLE IF EXISTS `pensum` CASCADE
;

DROP TABLE IF EXISTS `pensum_group` CASCADE
;

DROP TABLE IF EXISTS `pensum_group_students` CASCADE
;

DROP TABLE IF EXISTS `pensum_group_subject` CASCADE
;

DROP TABLE IF EXISTS `pensum_history` CASCADE
;

DROP TABLE IF EXISTS `pensum_subject` CASCADE
;

DROP TABLE IF EXISTS `role` CASCADE
;

DROP TABLE IF EXISTS `semester` CASCADE
;

DROP TABLE IF EXISTS `student` CASCADE
;

DROP TABLE IF EXISTS `subject` CASCADE
;

DROP TABLE IF EXISTS `subject_attachments` CASCADE
;

DROP TABLE IF EXISTS `subject_evaluation` CASCADE
;

DROP TABLE IF EXISTS `subject_evaluation_attachments` CASCADE
;

DROP TABLE IF EXISTS `subject_history` CASCADE
;

DROP TABLE IF EXISTS `teacher` CASCADE
;

DROP TABLE IF EXISTS `teacher_questionnaire` CASCADE
;

DROP TABLE IF EXISTS `teacher_questionnaire_classroom_course_group` CASCADE
;

DROP TABLE IF EXISTS `teacher_questionnaire_question` CASCADE
;

DROP TABLE IF EXISTS `teacher_questionnaire_question_answe_tgs_students` CASCADE
;

DROP TABLE IF EXISTS `teacher_questionnaire_question_answer_ccg_student` CASCADE
;

DROP TABLE IF EXISTS `teacher_questionnaire_technique_group_subject` CASCADE
;

DROP TABLE IF EXISTS `technique` CASCADE
;

DROP TABLE IF EXISTS `technique_history` CASCADE
;

DROP TABLE IF EXISTS `technique_student` CASCADE
;

DROP TABLE IF EXISTS `user` CASCADE
;

DROP TABLE IF EXISTS `user_history` CASCADE
;

DROP TABLE IF EXISTS `user_session` CASCADE
;

DROP TABLE IF EXISTS `virtual_course_item_resources` CASCADE
;

DROP TABLE IF EXISTS `virtual_courses` CASCADE
;

DROP TABLE IF EXISTS `virtual_courses_attachments` CASCADE
;

DROP TABLE IF EXISTS `virtual_courses_item` CASCADE
;

DROP TABLE IF EXISTS `virtual_courses_item_content` CASCADE
;

DROP TABLE IF EXISTS `virtual_courses_item_content_view` CASCADE
;

DROP TABLE IF EXISTS `virtual_courses_item_evaluation` CASCADE
;

DROP TABLE IF EXISTS `virtual_courses_item_evaluation_question` CASCADE
;

DROP TABLE IF EXISTS `virtual_courses_item_evaluation_question_answer` CASCADE
;

DROP TABLE IF EXISTS `virtual_courses_item_evaluation_question_resolved` CASCADE
;

DROP TABLE IF EXISTS `virtual_courses_item_evaluation_question_resolved_attachment` CASCADE
;

DROP TABLE IF EXISTS `virtual_courses_student` CASCADE
;

DROP TABLE IF EXISTS `working_day` CASCADE
;

/* Create Tables */

CREATE TABLE `absence`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`pensum_group_subjectID` INT NOT NULL,
	`stundentID` VARCHAR(50) NOT NULL,
	`day` DATETIME NOT NULL,
	`observation` TEXT NOT NULL,
	`created_by_teacherID` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_absence` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `agent`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`full_name` VARCHAR(200) NOT NULL,
	`login` VARCHAR(100) NOT NULL,
	`email` VARCHAR(100) NOT NULL,
	`valid` TINYINT NOT NULL,
	`password` TEXT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_user` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `agent_module`
(
	`agentID` INT NOT NULL,
	`moduleID` INT NOT NULL,
	`roleID` INT NOT NULL,
	`valid` TINYINT NOT NULL,
	`create_by` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_agent_module` PRIMARY KEY (`agentID` ASC, `moduleID` ASC)
)

;

CREATE TABLE `agent_session`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`agentID` INT NOT NULL,
	`token` TEXT NOT NULL,
	`session_data` TEXT NULL,
	`IP` VARCHAR(50) NULL,
	`valid` TINYINT NOT NULL,
	`start_time` DATETIME NOT NULL,
	`completion_time` DATETIME NOT NULL,
	CONSTRAINT `PK_agent_session` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `answer_type`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(50) NOT NULL,
	CONSTRAINT `PK_answer_type` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `campus`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(100) NOT NULL,
	`address` TEXT NOT NULL,
	`create_by_agentID` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_campus` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `classroom_course`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(100) NOT NULL,
	`subjectID` INT NOT NULL,
	`description` VARCHAR(100) NOT NULL,
	`observation` TEXT NULL,
	`duration` INT NOT NULL,
	`price` FLOAT(0,0) NOT NULL,
	`background_image` TEXT NOT NULL,
	`valid` TINYINT NOT NULL,
	`create_by_agentID` INT NOT NULL,
	`create_time` DATETIME NOT NULL,
	CONSTRAINT `PK_course` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `classroom_course_attachments`
(
	`id` INT NOT NULL,
	`classroom_courseID` INT NOT NULL,
	`name` TEXT NOT NULL,
	`path` TEXT NOT NULL,
	`create_by` INT NOT NULL,
	`create_time` DATETIME NOT NULL,
	CONSTRAINT `PK_classroom_course_attachments` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `classroom_course_group`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`classroom_courseID` INT NOT NULL,
	`teacherID` INT NOT NULL,
	`working_dayID` INT NOT NULL,
	`start_date` DATETIME NOT NULL,
	`final_date` DATETIME NOT NULL,
	`pre_registration` TINYINT NOT NULL,
	`create_by` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_course_group` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `classroom_course_group_student`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`classroom_course_groupID` INT NOT NULL,
	`classroom_course_studentID` INT NOT NULL,
	`valid` TINYINT NOT NULL,
	`create_by` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_classroom_course_group_student` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `classroom_course_student`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`classroom_courseID` INT NOT NULL,
	`studenID` INT NOT NULL,
	`create_by_agentID` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_classroom_course_student` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `config`
(
	`id` INT NOT NULL,
	`name` VARCHAR(200) NOT NULL,
	`description` TEXT NOT NULL,
	`assigned_value` TEXT NOT NULL,
	`default_value` TEXT NOT NULL,
	`change_by` INT NOT NULL,
	`change_time` DATETIME NOT NULL,
	`create_by` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_config` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `curso_group_student_absence`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`classroom_course_group_studentID` INT NOT NULL,
	`day` DATETIME NOT NULL,
	`observation` TEXT NOT NULL,
	`create_by` INT NOT NULL,
	CONSTRAINT `PK_curso_group_student_absence` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `event_type`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(50) NOT NULL,
	`create_by` INT NOT NULL,
	`create_time` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_event_type` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `group_students_note`
(
	`pensum_group_subjectID` INT NOT NULL,
	`studentID` INT NOT NULL,
	`evaluationID` INT NOT NULL,
	`note` FLOAT(0,0) NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	`created_by_teacherID` INT NOT NULL,
	CONSTRAINT `PK_group_students_note` PRIMARY KEY (`pensum_group_subjectID` ASC, `studentID` ASC)
)

;

CREATE TABLE `logs`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`code` TEXT NOT NULL,
	`message` TEXT NOT NULL,
	`error` TEXT NOT NULL,
	`module` VARCHAR(50) NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_logs` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `modules`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(50) NOT NULL,
	`icon` VARCHAR(50) NOT NULL,
	`url` VARCHAR(50) NOT NULL,
	`valid` TINYINT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_modules` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `notification`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(100) NOT NULL,
	`message` TEXT NOT NULL,
	`receiverID` INT NOT NULL,
	`emission_type` VARCHAR(50) NOT NULL,
	`create_by` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_notification` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `notification_reseiver`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(50) NOT NULL,
	`table_name` VARCHAR(50) NOT NULL,
	`create_by` INT NOT NULL,
	`create_time` DATETIME NOT NULL,
	CONSTRAINT `PK_notification_reseiver` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `pensum`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`techniqueID` INT NOT NULL,
	`name` VARCHAR(100) NOT NULL,
	`observation` TEXT NOT NULL,
	`absenteeism_rate` FLOAT(0,0) NOT NULL,
	`approval_note` FLOAT(0,0) NOT NULL,
	`valid` TINYINT NOT NULL,
	`create_by_agentID` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_think` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `pensum_group`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`pensumID` INT NOT NULL,
	`name` VARCHAR(200) NOT NULL,
	`semesterID` INT NOT NULL,
	`working_dayID` INT NULL,
	`valid` TINYINT NOT NULL,
	`create_by_agentID` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_technique_group` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `pensum_group_students`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`pensum_groupID` INT NOT NULL,
	`technique_studentID` INT NOT NULL,
	`create_by_agentID` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_pensum_group_students` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `pensum_group_subject`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`pensum_groupID` INT NOT NULL,
	`subjectID` INT NOT NULL,
	`name` VARCHAR(100) NOT NULL,
	`teacherID` INT NOT NULL,
	`campusID` INT NOT NULL,
	`start_date` DATETIME NOT NULL,
	`final_date` DATETIME NOT NULL,
	`create_by_agentID` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_technique_group_subject` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `pensum_history`
(
	`id` INT NOT NULL,
	`pensumID` INT NOT NULL,
	`event_typeID` INT NOT NULL,
	`event` TEXT NOT NULL,
	`create_by_agentID` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_think` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `pensum_subject`
(
	`pensumID` INT NOT NULL,
	`subjectID` INT NOT NULL,
	`levelID` INT NOT NULL,
	`credits` INT NOT NULL,
	`create_by_agentID` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
)

;

CREATE TABLE `role`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(50) NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_role` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `semester`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(50) NOT NULL,
	`initial_date` DATE NOT NULL,
	`final_date` DATE NOT NULL,
	`create_by_agentID` INT NOT NULL,
	`create_time` DATETIME NOT NULL,
	CONSTRAINT `PK_semester` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `student`
(
	`user_id` INT NOT NULL,
	`level_education` VARCHAR(50) NOT NULL,
	`EPS` VARCHAR(100) NOT NULL,
	CONSTRAINT `PK_student` PRIMARY KEY (`user_id` ASC)
)

;

CREATE TABLE `subject`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(100) NOT NULL,
	`hourly_intensity` INT NULL,
	`total_hourly_intensity` INT NULL,
	`valid` TINYINT NOT NULL,
	`create_by_agentID` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_subject` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `subject_attachments`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`subjectID` INT NOT NULL,
	`name` TEXT NOT NULL,
	`path` TEXT NOT NULL,
	`create_by_agentID` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_subject_evaluation_attachments` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `subject_evaluation`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`subjectID` INT NOT NULL,
	`name` VARCHAR(100) NOT NULL,
	`observation` TEXT NOT NULL,
	`percentage` FLOAT(0,0) NOT NULL,
	`create_by_agentID` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_subject_evaluation` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `subject_evaluation_attachments`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`subject_evaluationID` INT NOT NULL,
	`name` TEXT NOT NULL,
	`path` TEXT NOT NULL,
	`create_by_agentID` INT NOT NULL,
	`create_time` DATETIME NOT NULL,
	CONSTRAINT `PK_subject_evaluation_attachments` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `subject_history`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`subecjetID` INT NOT NULL,
	`event_typeID` INT NOT NULL,
	`event` TEXT NOT NULL,
	`observation` TEXT NULL,
	`create_by` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_subject_history` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `teacher`
(
	`user_id` INT NOT NULL,
	`EPS` VARCHAR(50) NOT NULL,
	`date_admission` TIMESTAMP NOT NULL,
	CONSTRAINT `PK_teacher` PRIMARY KEY (`user_id` ASC)
)

;

CREATE TABLE `teacher_questionnaire`
(
	`id` INT NOT NULL,
	`name` TEXT NOT NULL,
	`observation` TEXT NOT NULL,
	`valid` TINYINT NOT NULL,
	`create_by` INT NOT NULL,
	`create_time` DATETIME NOT NULL,
	CONSTRAINT `PK_teacher_questionnaire` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `teacher_questionnaire_classroom_course_group`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`teacher_questionnaireID` INT NOT NULL,
	`classroom_course_groupID` INT NOT NULL,
	`valid` TINYINT NOT NULL,
	`start_date` DATETIME NOT NULL,
	`final_date` DATETIME NOT NULL,
	`create_by` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_teacher_questionnaire_classroom_course_group` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `teacher_questionnaire_question`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`teacher_questionnaireID` INT NOT NULL,
	`question` TEXT NOT NULL,
	`valid` TINYINT NOT NULL,
	`create_by` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_teacher_questionnaire_question` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `teacher_questionnaire_question_answe_tgs_students`
(
	`in` INT NOT NULL AUTO_INCREMENT,
	`teacher_questionnaire_questionID` INT NOT NULL,
	`technique_group_subject_studentsID` INT NOT NULL,
	`answer` TEXT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_teacher_questionnaire_question_answe_tgs_students` PRIMARY KEY (`in` ASC)
)

;

CREATE TABLE `teacher_questionnaire_question_answer_ccg_student`
(
	`id` INT NOT NULL,
	`teacher_questionnaire_questionID` INT NOT NULL,
	`classroom_course_group_studentID` INT NOT NULL,
	`answer` TEXT NOT NULL,
	`create_time` DATETIME NOT NULL,
	CONSTRAINT `PK_question_vote` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `teacher_questionnaire_technique_group_subject`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`teacher_questionnaireID` INT NOT NULL,
	`technique_group_subjectID` INT NOT NULL,
	`valid` TINYINT NOT NULL,
	`start_date` DATETIME NOT NULL,
	`final_date` DATETIME NOT NULL,
	`create_by` INT NOT NULL,
	`create_time` VARCHAR(50) NOT NULL,
	CONSTRAINT `PK_teacher_questionnaire_technique_group_subject` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `technique`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(100) NOT NULL,
	`abbreviation` VARCHAR(50) NOT NULL,
	`resolution_number` VARCHAR(50) NULL COMMENT '2022-12-12 30:30:30',
	`date_resolution` DATE NULL,
	`description` VARCHAR(100) NOT NULL,
	`observation` TEXT NULL,
	`background_image` TEXT NOT NULL,
	`price` FLOAT(0,0) NOT NULL,
	`pre_registration` TINYINT NOT NULL,
	`valid` TINYINT NOT NULL,
	`create_by_agentID` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_tecnica` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `technique_history`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`techniqueID` INT NOT NULL,
	`event_typeID` INT NOT NULL,
	`event` TEXT NOT NULL,
	`observation` TEXT NULL,
	`create_by` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_technique_history` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `technique_student`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`techniqueID` INT NOT NULL,
	`studentID` INT NOT NULL,
	`create_by_agentID` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_technique_student` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `user`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`document_typeID` INT NOT NULL,
	`document` VARCHAR(15) NOT NULL,
	`document_issue_date` DATE NOT NULL,
	`place_issuance_document` VARCHAR(100) NOT NULL,
	`first_name` VARCHAR(50) NOT NULL,
	`second_name` VARCHAR(50) NULL,
	`surname` VARCHAR(50) NOT NULL,
	`second_surname` VARCHAR(50) NOT NULL,
	`genderID` INT NOT NULL,
	`email` VARCHAR(100) NOT NULL,
	`cell_phone_number` VARCHAR(15) NOT NULL,
	`date_birth` DATE NOT NULL,
	`place_birth` VARCHAR(100) NULL,
	`disability` VARCHAR(50) NOT NULL,
	`conveyance` VARCHAR(50) NOT NULL,
	`marital_status` VARCHAR(50) NOT NULL,
	`number_children` INT NULL,
	`stratum` INT NOT NULL,
	`multicultural` VARCHAR(50) NULL,
	`blood_type` VARCHAR(5) NOT NULL,
	`municipality_residence` VARCHAR(50) NOT NULL,
	`neighborhood_residence` VARCHAR(50) NOT NULL,
	`address` VARCHAR(50) NOT NULL,
	`valid` TINYINT NOT NULL,
	`password` TEXT NOT NULL,
	`create_by_agentID` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_user` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `user_history`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`userID` INT NOT NULL,
	`event_typeID` INT NOT NULL,
	`event` TEXT NOT NULL,
	`observation` TEXT NULL,
	`create_by` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_user_history` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `user_session`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`userID` INT NOT NULL,
	`token` TEXT NOT NULL,
	`session_data` TEXT NULL,
	`IP` VARCHAR(50) NULL,
	`valid` TINYINT NOT NULL,
	`start_time` DATETIME NOT NULL,
	`completion_time` DATETIME NOT NULL,
	CONSTRAINT `PK_agent_session` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `virtual_course_item_resources`
(
	`id` INT NOT NULL,
	`virtual_courseID` INT NOT NULL,
	`value` TEXT NOT NULL,
	`required` TINYINT NOT NULL,
	`create_by` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_virtual_course_item_resources` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `virtual_courses`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(200) NOT NULL,
	`subjectID` INT NOT NULL,
	`observation` TEXT NOT NULL,
	`pre_registration` TINYINT NOT NULL,
	`create_by` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_virtual_courses` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `virtual_courses_attachments`
(
	`id` INT NOT NULL,
	`virtual_coursesID` INT NOT NULL,
	`name` TEXT NOT NULL,
	`path` TEXT NOT NULL,
	`create_by` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_virtual_courses_attachments` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `virtual_courses_item`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`virtual_coursesID` INT NOT NULL,
	`name` VARCHAR(100) NOT NULL,
	`description` TEXT NOT NULL,
	`credits` FLOAT(0,0) NOT NULL,
	`approved_note` FLOAT(0,0) NOT NULL,
	`valid` TINYINT NOT NULL,
	`create_by` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_virtual_courses_item` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `virtual_courses_item_content`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`virtual_courses_itemID` INT NOT NULL,
	`body` TEXT NOT NULL,
	`observation` TEXT NOT NULL,
	`required` TINYINT NOT NULL,
	`create_by` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_virtual_courses_item_content` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `virtual_courses_item_content_view`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`virtual_courses_item_contentID` INT NOT NULL,
	`virtual_courses_studentID` INT NOT NULL,
	`create_time` VARCHAR(50) NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_virtual_courses_item_content_view` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `virtual_courses_item_evaluation`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`virtual_courses_itemID` INT NOT NULL,
	`name` VARCHAR(100) NOT NULL,
	`description` TEXT NOT NULL,
	`score` FLOAT(0,0) NOT NULL,
	`create_by` INT NOT NULL,
	`create_time` DATETIME NOT NULL,
	CONSTRAINT `PK_virtual_courses_item_evaluation` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `virtual_courses_item_evaluation_question`
(
	`int` INT NOT NULL AUTO_INCREMENT,
	`virtual_courses_item_evaluationID` INT NOT NULL,
	`question` TEXT NOT NULL,
	`credits` FLOAT(0,0) NOT NULL,
	`position` INT NOT NULL,
	`answer_typeID` INT NOT NULL,
	`create_by` INT NOT NULL,
	`create_time` DATETIME NOT NULL,
	CONSTRAINT `PK_virtual_courses_item_evaluation` PRIMARY KEY (`int` ASC)
)

;

CREATE TABLE `virtual_courses_item_evaluation_question_answer`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`virtual_courses_item_evaluation_questionID` INT NOT NULL,
	`answer` TEXT NOT NULL,
	`create_by` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_virtual_courses_item_evaluation_question_answer` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `virtual_courses_item_evaluation_question_resolved`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`virtual_courses_item_evaluation_questionID` INT NOT NULL,
	`virtual_courses_studentID` INT NOT NULL,
	`answer` TEXT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_virtual_courses_item_evaluation_question_resolved` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `virtual_courses_item_evaluation_question_resolved_attachment`
(
	`int` INT NOT NULL AUTO_INCREMENT,
	`virtual_courses_item_evaluation_question_resolvedID` INT NOT NULL,
	`name` TEXT NOT NULL,
	`path` TEXT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_virtual_courses_item_evaluation_question_resolved_attachmen` PRIMARY KEY (`int` ASC)
)

;

CREATE TABLE `virtual_courses_student`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`virtual_coursesID` INT NOT NULL,
	`studentID` INT NOT NULL,
	`valid` TINYINT NOT NULL,
	`create_by` INT NOT NULL,
	`create_time` DATETIME NOT NULL,
	CONSTRAINT `PK_virtual_courses_student` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `working_day`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(50) NOT NULL,
	`start_time` TIME NOT NULL,
	`completion_time` TIME NOT NULL,
	`valid` TINYINT NOT NULL,
	`create_by_agentID` INT NOT NULL,
	`create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT `PK_working_day` PRIMARY KEY (`id` ASC)
)

;

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE `absence` 
 ADD INDEX `IXFK_absence_group_students` (`pensum_group_subjectID` ASC)
;

ALTER TABLE `absence` 
 ADD INDEX `IXFK_absence_pensum_group_subject` (`pensum_group_subjectID` ASC)
;

ALTER TABLE `agent_module` 
 ADD INDEX `IXFK_agent_module_agent` (`agentID` ASC)
;

ALTER TABLE `agent_module` 
 ADD INDEX `IXFK_agent_module_modules` (`moduleID` ASC)
;

ALTER TABLE `agent_module` 
 ADD INDEX `IXFK_agent_module_role` (`roleID` ASC)
;

ALTER TABLE `agent_session` 
 ADD INDEX `IXFK_agent_session_agent` (`agentID` ASC)
;

ALTER TABLE `classroom_course` 
 ADD INDEX `IXFK_course_subject` (`subjectID` ASC)
;

ALTER TABLE `classroom_course_attachments` 
 ADD INDEX `IXFK_classroom_course_attachments_evaluation` (`classroom_courseID` ASC)
;

ALTER TABLE `classroom_course_group` 
 ADD INDEX `IXFK_course_group_classroom_course` (`classroom_courseID` ASC)
;

ALTER TABLE `classroom_course_group_student` 
 ADD INDEX `IXFK_classroom_course_group_student_classroom_course_group` (`classroom_course_groupID` ASC)
;

ALTER TABLE `classroom_course_group_student` 
 ADD INDEX `IXFK_classroom_course_group_student_classroom_course_student` (`classroom_course_studentID` ASC)
;

ALTER TABLE `classroom_course_student` 
 ADD INDEX `IXFK_classroom_course_student_classroom_course` (`classroom_courseID` ASC)
;

ALTER TABLE `curso_group_student_absence` 
 ADD INDEX `IXFK_curso_group_student_absence_classroom_course_group_student` (`classroom_course_group_studentID` ASC)
;

ALTER TABLE `curso_group_student_absence` 
 ADD INDEX `IXFK_curso_group_student_absence_curso_group_student` (`classroom_course_group_studentID` ASC)
;

ALTER TABLE `group_students_note` 
 ADD INDEX `IXFK_group_students_note_pensum_group_subject` (`pensum_group_subjectID` ASC)
;

ALTER TABLE `notification` 
 ADD INDEX `IXFK_notification_notification_reseiver` (`receiverID` ASC)
;

ALTER TABLE `pensum` 
 ADD INDEX `IXFK_think_technique` (`techniqueID` ASC)
;

ALTER TABLE `pensum_group` 
 ADD INDEX `IXFK_pensum_group_pensum` (`pensumID` ASC)
;

ALTER TABLE `pensum_group` 
 ADD INDEX `IXFK_pensum_group_semester` (`pensumID` ASC)
;

ALTER TABLE `pensum_group` 
 ADD INDEX `IXFK_pensum_group_working_day` (`working_dayID` ASC)
;

ALTER TABLE `pensum_group_students` 
 ADD INDEX `IXFK_pensum_group_students_pensum_group` (`pensum_groupID` ASC)
;

ALTER TABLE `pensum_group_students` 
 ADD INDEX `IXFK_pensum_group_students_technique_student` (`technique_studentID` ASC)
;

ALTER TABLE `pensum_group_subject` 
 ADD INDEX `IXFK_pensum_group_subject_campus` (`campusID` ASC)
;

ALTER TABLE `pensum_group_subject` 
 ADD INDEX `IXFK_pensum_group_subject_pensum_group` (`pensum_groupID` ASC)
;

ALTER TABLE `pensum_history` 
 ADD INDEX `IXFK_pensum_history_pensum` (`pensumID` ASC)
;

ALTER TABLE `pensum_history` 
 ADD INDEX `IXFK_think_think` (`pensumID` ASC)
;

ALTER TABLE `pensum_subject` 
 ADD INDEX `IXFK_pensum_subject_pensum` (`pensumID` ASC)
;

ALTER TABLE `pensum_subject` 
 ADD INDEX `IXFK_pensum_subject_subject` (`subjectID` ASC)
;

ALTER TABLE `student` 
 ADD INDEX `IXFK_student_user` (`user_id` ASC)
;

ALTER TABLE `subject_attachments` 
 ADD INDEX `IXFK_subject_evaluation_attachments_subject` (`subjectID` ASC)
;

ALTER TABLE `subject_evaluation` 
 ADD INDEX `IXFK_subject_evaluation_subject` (`subjectID` ASC)
;

ALTER TABLE `subject_evaluation_attachments` 
 ADD INDEX `IXFK_subject_evaluation_attachments_subject_evaluation` (`subject_evaluationID` ASC)
;

ALTER TABLE `subject_history` 
 ADD INDEX `IXFK_subject_history_subject` (`subecjetID` ASC)
;

ALTER TABLE `teacher` 
 ADD INDEX `IXFK_teacher_user` (`user_id` ASC)
;

ALTER TABLE `teacher_questionnaire_classroom_course_group` 
 ADD INDEX `IXFK_teacher_questionnaire_classroom_course_group_classroom_course_group` (`classroom_course_groupID` ASC)
;

ALTER TABLE `teacher_questionnaire_classroom_course_group` 
 ADD INDEX `IXFK_teacher_questionnaire_classroom_course_group_teacher_questionnaire` (`teacher_questionnaireID` ASC)
;

ALTER TABLE `teacher_questionnaire_question` 
 ADD INDEX `IXFK_teacher_questionnaire_question_teacher_questionnaire` (`teacher_questionnaireID` ASC)
;

ALTER TABLE `teacher_questionnaire_question_answe_tgs_students` 
 ADD INDEX `IXFK_teacher_questionnaire_question_answe_tgs_students_teacher_questionnaire_question` (`teacher_questionnaire_questionID` ASC)
;

ALTER TABLE `teacher_questionnaire_question_answer_ccg_student` 
 ADD INDEX `IXFK_question_vote_teacher_questionnaire_question` (`teacher_questionnaire_questionID` ASC)
;

ALTER TABLE `teacher_questionnaire_question_answer_ccg_student` 
 ADD INDEX `IXFK_teacher_questionnaire_question_answer_classroom_course_group_student` (`classroom_course_group_studentID` ASC)
;

ALTER TABLE `teacher_questionnaire_technique_group_subject` 
 ADD INDEX `IXFK_teacher_questionnaire_technique_group_subject_teacher_questionnaire` (`teacher_questionnaireID` ASC)
;

ALTER TABLE `technique_history` 
 ADD INDEX `IXFK_technique_history_technique` (`techniqueID` ASC)
;

ALTER TABLE `technique_history` 
 ADD INDEX `IXFK_technique_history_technique_02` (`techniqueID` ASC)
;

ALTER TABLE `technique_student` 
 ADD INDEX `IXFK_technique_student_technique` (`techniqueID` ASC)
;

ALTER TABLE `user_history` 
 ADD INDEX `IXFK_user_history_user` (`userID` ASC)
;

ALTER TABLE `user_session` 
 ADD INDEX `IXFK_agent_session_agent` (`userID` ASC)
;

ALTER TABLE `user_session` 
 ADD INDEX `IXFK_user_session_user` (`userID` ASC)
;

ALTER TABLE `virtual_courses` 
 ADD INDEX `IXFK_virtual_courses_subject` (`subjectID` ASC)
;

ALTER TABLE `virtual_courses_attachments` 
 ADD INDEX `IXFK_virtual_courses_attachments_virtual_courses` (`virtual_coursesID` ASC)
;

ALTER TABLE `virtual_courses_item` 
 ADD INDEX `IXFK_virtual_courses_item_virtual_course_item_resources` (`virtual_coursesID` ASC)
;

ALTER TABLE `virtual_courses_item` 
 ADD INDEX `IXFK_virtual_courses_item_virtual_courses` (`virtual_coursesID` ASC)
;

ALTER TABLE `virtual_courses_item_content` 
 ADD INDEX `IXFK_virtual_courses_item_content_virtual_courses_item` (`virtual_courses_itemID` ASC)
;

ALTER TABLE `virtual_courses_item_content_view` 
 ADD INDEX `IXFK_virtual_courses_item_content_view_virtual_courses_item_content` (`virtual_courses_item_contentID` ASC)
;

ALTER TABLE `virtual_courses_item_content_view` 
 ADD INDEX `IXFK_virtual_courses_item_content_view_virtual_courses_student` (`virtual_courses_studentID` ASC)
;

ALTER TABLE `virtual_courses_item_evaluation` 
 ADD INDEX `IXFK_virtual_courses_item_evaluation_virtual_courses_item` (`virtual_courses_itemID` ASC)
;

ALTER TABLE `virtual_courses_item_evaluation_question` 
 ADD INDEX `IXFK_virtual_courses_item_evaluation_question_answer_type` (`answer_typeID` ASC)
;

ALTER TABLE `virtual_courses_item_evaluation_question` 
 ADD INDEX `IXFK_virtual_courses_item_evaluation_question_virtual_courses_item_evaluation` (`virtual_courses_item_evaluationID` ASC)
;

ALTER TABLE `virtual_courses_item_evaluation_question_answer` 
 ADD INDEX `IXFK_virtual_courses_item_evaluation_question_answer_virtual_courses_item_evaluation_question` (`virtual_courses_item_evaluation_questionID` ASC)
;

ALTER TABLE `virtual_courses_item_evaluation_question_resolved` 
 ADD INDEX `IXFK_virtual_courses_item_evaluation_question_resolved_virtual_courses_item_evaluation_question` (`virtual_courses_item_evaluation_questionID` ASC)
;

ALTER TABLE `virtual_courses_item_evaluation_question_resolved` 
 ADD INDEX `IXFK_virtual_courses_item_evaluation_question_resolved_virtual_courses_student` (`virtual_courses_studentID` ASC)
;

ALTER TABLE `virtual_courses_item_evaluation_question_resolved_attachment` 
 ADD INDEX `IXFK_virtual_courses_item_evaluation_question_resolved_attachmen_virtual_courses_item_evaluation_question_resolved` (`virtual_courses_item_evaluation_question_resolvedID` ASC)
;

ALTER TABLE `virtual_courses_student` 
 ADD INDEX `IXFK_virtual_courses_student_student` (`studentID` ASC)
;

ALTER TABLE `virtual_courses_student` 
 ADD INDEX `IXFK_virtual_courses_student_virtual_courses` (`virtual_coursesID` ASC)
;

/* Create Foreign Key Constraints */

ALTER TABLE `absence` 
 ADD CONSTRAINT `FK_absence_pensum_group_subject`
	FOREIGN KEY (`pensum_group_subjectID`) REFERENCES `pensum_group_subject` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `agent_module` 
 ADD CONSTRAINT `FK_agent_module_agent`
	FOREIGN KEY (`agentID`) REFERENCES `agent` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `agent_module` 
 ADD CONSTRAINT `FK_agent_module_modules`
	FOREIGN KEY (`moduleID`) REFERENCES `modules` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `agent_module` 
 ADD CONSTRAINT `FK_agent_module_role`
	FOREIGN KEY (`roleID`) REFERENCES `role` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `agent_session` 
 ADD CONSTRAINT `FK_agent_session_agent`
	FOREIGN KEY (`agentID`) REFERENCES `agent` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `classroom_course_group` 
 ADD CONSTRAINT `FK_course_group_classroom_course`
	FOREIGN KEY (`classroom_courseID`) REFERENCES `classroom_course` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `classroom_course_group_student` 
 ADD CONSTRAINT `FK_classroom_course_group_student_classroom_course_group`
	FOREIGN KEY (`classroom_course_groupID`) REFERENCES `classroom_course_group` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `classroom_course_group_student` 
 ADD CONSTRAINT `FK_classroom_course_group_student_classroom_course_student`
	FOREIGN KEY (`classroom_course_studentID`) REFERENCES `classroom_course_student` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `classroom_course_student` 
 ADD CONSTRAINT `FK_classroom_course_student_classroom_course`
	FOREIGN KEY (`classroom_courseID`) REFERENCES `classroom_course` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `curso_group_student_absence` 
 ADD CONSTRAINT `FK_curso_group_student_absence_classroom_course_group_student`
	FOREIGN KEY (`classroom_course_group_studentID`) REFERENCES `classroom_course_group_student` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `group_students_note` 
 ADD CONSTRAINT `FK_group_students_note_pensum_group_subject`
	FOREIGN KEY (`pensum_group_subjectID`) REFERENCES `pensum_group_subject` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `notification` 
 ADD CONSTRAINT `FK_notification_notification_reseiver`
	FOREIGN KEY (`receiverID`) REFERENCES `notification_reseiver` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `pensum` 
 ADD CONSTRAINT `FK_think_technique`
	FOREIGN KEY (`techniqueID`) REFERENCES `technique` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `pensum_group` 
 ADD CONSTRAINT `FK_pensum_group_pensum`
	FOREIGN KEY (`pensumID`) REFERENCES `pensum` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `pensum_group` 
 ADD CONSTRAINT `FK_pensum_group_semester`
	FOREIGN KEY (`pensumID`) REFERENCES `semester` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `pensum_group` 
 ADD CONSTRAINT `FK_pensum_group_working_day`
	FOREIGN KEY (`working_dayID`) REFERENCES `working_day` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `pensum_group_students` 
 ADD CONSTRAINT `FK_pensum_group_students_pensum_group`
	FOREIGN KEY (`pensum_groupID`) REFERENCES `pensum_group` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `pensum_group_subject` 
 ADD CONSTRAINT `FK_pensum_group_subject_campus`
	FOREIGN KEY (`campusID`) REFERENCES `campus` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `pensum_group_subject` 
 ADD CONSTRAINT `FK_pensum_group_subject_pensum_group`
	FOREIGN KEY (`pensum_groupID`) REFERENCES `pensum_group` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `pensum_history` 
 ADD CONSTRAINT `FK_pensum_history_pensum`
	FOREIGN KEY (`pensumID`) REFERENCES `pensum` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `pensum_subject` 
 ADD CONSTRAINT `FK_pensum_subject_subject`
	FOREIGN KEY (`subjectID`) REFERENCES `subject` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `student` 
 ADD CONSTRAINT `FK_student_user`
	FOREIGN KEY (`user_id`) REFERENCES `user` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `subject_attachments` 
 ADD CONSTRAINT `FK_subject_evaluation_attachments_subject`
	FOREIGN KEY (`subjectID`) REFERENCES `subject` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `subject_evaluation` 
 ADD CONSTRAINT `FK_subject_evaluation_subject`
	FOREIGN KEY (`subjectID`) REFERENCES `subject` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `subject_evaluation_attachments` 
 ADD CONSTRAINT `FK_subject_evaluation_attachments_subject_evaluation`
	FOREIGN KEY (`subject_evaluationID`) REFERENCES `subject_evaluation` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `teacher` 
 ADD CONSTRAINT `FK_teacher_user`
	FOREIGN KEY (`user_id`) REFERENCES `user` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `teacher_questionnaire_classroom_course_group` 
 ADD CONSTRAINT `FK_teacher_questionnaire_classroom_course_group_classroom_course_group`
	FOREIGN KEY (`classroom_course_groupID`) REFERENCES  () ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `teacher_questionnaire_classroom_course_group` 
 ADD CONSTRAINT `FK_teacher_questionnaire_classroom_course_group_teacher_questionnaire`
	FOREIGN KEY (`teacher_questionnaireID`) REFERENCES `teacher_questionnaire` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `teacher_questionnaire_question` 
 ADD CONSTRAINT `FK_teacher_questionnaire_question_teacher_questionnaire`
	FOREIGN KEY (`teacher_questionnaireID`) REFERENCES `teacher_questionnaire` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `teacher_questionnaire_question_answe_tgs_students` 
 ADD CONSTRAINT `FK_teacher_questionnaire_question_answe_tgs_students_teacher_questionnaire_question`
	FOREIGN KEY (`teacher_questionnaire_questionID`) REFERENCES `teacher_questionnaire_question` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `teacher_questionnaire_question_answer_ccg_student` 
 ADD CONSTRAINT `FK_question_vote_teacher_questionnaire_question`
	FOREIGN KEY (`teacher_questionnaire_questionID`) REFERENCES `teacher_questionnaire_question` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `teacher_questionnaire_question_answer_ccg_student` 
 ADD CONSTRAINT `FK_teacher_questionnaire_question_answer_classroom_course_group_student`
	FOREIGN KEY (`classroom_course_group_studentID`) REFERENCES  () ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `teacher_questionnaire_technique_group_subject` 
 ADD CONSTRAINT `FK_teacher_questionnaire_technique_group_subject_teacher_questionnaire`
	FOREIGN KEY (`teacher_questionnaireID`) REFERENCES `teacher_questionnaire` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `technique_history` 
 ADD CONSTRAINT `FK_technique_history_technique`
	FOREIGN KEY (`techniqueID`) REFERENCES `technique` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `technique_student` 
 ADD CONSTRAINT `FK_technique_student_technique`
	FOREIGN KEY (`techniqueID`) REFERENCES `technique` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `user_history` 
 ADD CONSTRAINT `FK_user_history_user`
	FOREIGN KEY (`userID`) REFERENCES `user` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `user_session` 
 ADD CONSTRAINT `FK_agent_session_agent`
	FOREIGN KEY (`userID`) REFERENCES  () ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `user_session` 
 ADD CONSTRAINT `FK_user_session_user`
	FOREIGN KEY (`userID`) REFERENCES `user` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `virtual_courses_attachments` 
 ADD CONSTRAINT `FK_virtual_courses_attachments_virtual_courses`
	FOREIGN KEY (`virtual_coursesID`) REFERENCES `virtual_courses` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `virtual_courses_item` 
 ADD CONSTRAINT `FK_virtual_courses_item_virtual_course_item_resources`
	FOREIGN KEY (`virtual_coursesID`) REFERENCES `virtual_course_item_resources` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `virtual_courses_item` 
 ADD CONSTRAINT `FK_virtual_courses_item_virtual_courses`
	FOREIGN KEY (`virtual_coursesID`) REFERENCES `virtual_courses` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `virtual_courses_item_content` 
 ADD CONSTRAINT `FK_virtual_courses_item_content_virtual_courses_item`
	FOREIGN KEY (`virtual_courses_itemID`) REFERENCES `virtual_courses_item` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `virtual_courses_item_content_view` 
 ADD CONSTRAINT `FK_virtual_courses_item_content_view_virtual_courses_item_content`
	FOREIGN KEY (`virtual_courses_item_contentID`) REFERENCES `virtual_courses_item_content` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `virtual_courses_item_content_view` 
 ADD CONSTRAINT `FK_virtual_courses_item_content_view_virtual_courses_student`
	FOREIGN KEY (`virtual_courses_studentID`) REFERENCES `virtual_courses_student` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `virtual_courses_item_evaluation` 
 ADD CONSTRAINT `FK_virtual_courses_item_evaluation_virtual_courses_item`
	FOREIGN KEY (`virtual_courses_itemID`) REFERENCES `virtual_courses_item` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `virtual_courses_item_evaluation_question` 
 ADD CONSTRAINT `FK_virtual_courses_item_evaluation_question_answer_type`
	FOREIGN KEY (`answer_typeID`) REFERENCES `answer_type` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `virtual_courses_item_evaluation_question` 
 ADD CONSTRAINT `FK_virtual_courses_item_evaluation_question_virtual_courses_item_evaluation`
	FOREIGN KEY (`virtual_courses_item_evaluationID`) REFERENCES `virtual_courses_item_evaluation` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `virtual_courses_item_evaluation_question_answer` 
 ADD CONSTRAINT `FK_virtual_courses_item_evaluation_question_answer_virtual_courses_item_evaluation_question`
	FOREIGN KEY (`virtual_courses_item_evaluation_questionID`) REFERENCES `virtual_courses_item_evaluation_question` (`int`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `virtual_courses_item_evaluation_question_resolved` 
 ADD CONSTRAINT `FK_virtual_courses_item_evaluation_question_resolved_virtual_courses_item_evaluation_question`
	FOREIGN KEY (`virtual_courses_item_evaluation_questionID`) REFERENCES `virtual_courses_item_evaluation_question` (`int`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `virtual_courses_item_evaluation_question_resolved` 
 ADD CONSTRAINT `FK_virtual_courses_item_evaluation_question_resolved_virtual_courses_student`
	FOREIGN KEY (`virtual_courses_studentID`) REFERENCES `virtual_courses_student` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `virtual_courses_item_evaluation_question_resolved_attachment` 
 ADD CONSTRAINT `FK_virtual_courses_item_evaluation_question_resolved_attachmen_virtual_courses_item_evaluation_question_resolved`
	FOREIGN KEY (`virtual_courses_item_evaluation_question_resolvedID`) REFERENCES `virtual_courses_item_evaluation_question_resolved` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `virtual_courses_student` 
 ADD CONSTRAINT `FK_virtual_courses_student_student`
	FOREIGN KEY (`studentID`) REFERENCES `student` (`user_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `virtual_courses_student` 
 ADD CONSTRAINT `FK_virtual_courses_student_virtual_courses`
	FOREIGN KEY (`virtual_coursesID`) REFERENCES `virtual_courses` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

SET FOREIGN_KEY_CHECKS=1 
;
